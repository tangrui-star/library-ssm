<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javapandeng.mapper.ManageBorrowMapper">
    <!--实体类与数据库映射字段部分-->
    <resultMap id="ResultMapManageBorrow" type="com.javapandeng.po.ManageBorrow">
        <result property="borrowID" column="borrowID" jdbcType="INTEGER"/>
        <result property="rdID" column="rdID" jdbcType="INTEGER"/>
        <result property="bkID" column="bkID" jdbcType="INTEGER"/>
        <result property="ldContinueTimes" column="ldContinueTimes" jdbcType="INTEGER"/>
        <result property="ldDateOut" column="ldDateOut" jdbcType="TIMESTAMP"/>
        <result property="ldDateRetPlan" column="ldDateRetPlan" jdbcType="TIMESTAMP"/>
        <result property="ldDateRetAct" column="ldDateRetAct" jdbcType="TIMESTAMP"/>
        <result property="ldOverDay" column="ldOverDay" jdbcType="INTEGER"/>
        <result property="ldOverMoney" column="ldOverMoney" jdbcType="DECIMAL"/>
        <result property="ldPunishMoney" column="ldPunishMoney" jdbcType="DECIMAL"/>
        <result property="lsHasReturn" column="lsHasReturn" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 声明数据库字段 -->
    <sql id="ManageBorrow_field">
       rdID,bkID,ldContinueTimes,ldDateOut,ldDateRetPlan,ldDateRetAct,ldOverDay,ldOverMoney,ldPunishMoney,lsHasReturn
    </sql>

    <!-- 实体类属性-->
    <sql id="ManageBorrow_insert">
       #{rdID},#{bkID},#{ldDateOut},#{ldDateRetPlan},#{ldDateRetAct},#{ldOverDay},#{ldOverMoney},#{ldPunishMoney},#{lsHasReturn}
    </sql>



    <!--    新增        -->
    <!--    参数：实体类-->
    <!--    返回：主键 -->
    <insert id="insert" parameterType="com.javapandeng.po.ManageBorrow" useGeneratedKeys="true" keyProperty="BorrowID">
        insert into tb_borrow(
        borrowID,rdID,bkID,ldContinueTimes,ldDateOut,ldDateRetPlan,ldDateRetAct,ldOverDay,ldOverMoney,ldPunishMoney,lsHasReturn
        ) values(
         #{borrowID},#{rdID},#{bkID},#{ldContinueTimes},#{ldDateOut},#{ldDateRetPlan},#{ldDateRetAct},#{ldOverDay},#{ldOverMoney},#{ldPunishMoney},#{lsHasReturn}
        )
    </insert>

    <insert id="insert1" parameterType="com.javapandeng.po.ManageBorrow" useGeneratedKeys="true" keyProperty="BorrowID">
        insert into tb_borrow(
        borrowID,rdID,bkID,ldDateRetPlan,ldDateRetAct,ldOverDay,ldOverMoney,ldPunishMoney,lsHasReturn
        ) values(
         #{borrowID},#{rdID},#{bkID},#{ldDateRetPlan},#{ldDateRetAct},#{ldOverDay},#{ldOverMoney},#{ldPunishMoney},#{lsHasReturn}
        )
    </insert>
<!--
    insert into tb_borrow
    (rdID,bkID,ldContinueTimes,ldDateOut,ldDateRetPlan,ldDateRetAct,ldOverDay,ldOverMoney,ldPunishMoney,lsHasReturn)
    values
    (109,15,1,'2020-10-1','2020-12-21','2020-11-10',0,0,0,1)-->

    <!-- 更新结果  -->
    <sql id="ManageBorrow_update">
        <if test="BorrowID != null">
            borrowID = #{borrowID},
        </if>
        <if test="rdID != null">
            rdID = #{rdID},
        </if>
        <if test="bkID != null">
            bkID = #{bkID},
        </if>
        <if test="ldContinueTimes != null">
            ldContinueTimes = #{ldContinueTimes},
        </if>
        <if test="ldDateOut != null">
            ldDateOut = #{ldDateOut},
        </if>
        <if test="ldDateRetPlan != null">
            ldDateRetPlan = #{ldDateRetPlan},
        </if>
        <if test="bkPrice != null">
            bkPrice = #{bkPrice},
        </if>
        <if test="bkDateInput != null">
            bkDateInput = #{bkDateInput},
        </if>
        <if test="bkBrief != null">
            bkBrief = #{bkBrief},
        </if>
        <if test="bkStatus != null">
            bkStatus = #{bkStatus}
        </if>
    </sql>

    <!-- 查询时条件   -->
    <sql id="ManageBorrow_where">
        <if test="BorrowID != null">
            and borrowID = #{borrowID},
        </if>
        <if test="rdID != null">
            rdID = #{rdID},
        </if>
        <if test="bklD != null">
            bklD = #{bkID},
        </if>
        <if test="ldContinueTimes != null">
            ldContinueTimes = #{ldContinueTimes},
        </if>
        <if test="ldDateOut != null">
            ldDateOut = #{ldDateOut},
        </if>
        <if test="ldDateOut != null">
            ldDateOut = #{ldDateOut},
        </if>
        <if test="ldDateRetPlan != null">
            ldDateRetPlan = #{ldDateRetPlan},
        </if>
        <if test="ldDateRetAct != null">
            ldDateRetAct = #{ldDateRetAct},
        </if>
        <if test="ldOverDay != null">
            ldOverDay = #{ldOverDay},
        </if>
        <if test="ldOverMoney != null">
            ldOverMoney = #{ldOverMoney},
        </if>
        <if test="lsHasReturn != null">
            lsHasReturn = #{lsHasReturn}
        </if>
    </sql>



    <!-- 根据实体主键删除一个实体-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from tb_borrow where borrowID=#{borrowID}
    </delete>

    <!-- 通过实体删除-->
    <delete id="deleteByEntity" parameterType="com.javapandeng.po.ManageBorrow">
        delete from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </delete>

    <!-- 通过map删除 -->
    <delete id="deleteByMap" parameterType="java.util.HashMap">
        delete from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </delete>

    <!-- 更新一个实体 -->
    <update id="update" parameterType="com.javapandeng.po.ManageBorrow">
        update tb_borrow
        <set>
            <include refid="ManageBorrow_update"/>
        </set>
        where 1=1
        <include refid="ManageBorrow_where"/>
    </update>

    <!-- 通过id进行修改-->
    <update id="updateById" parameterType="com.javapandeng.po.ManageBorrow">
        update tb_borrow
        <set>
            <include refid="ManageBorrow_update"/>
        </set>
        where bkID=#{bkID}
    </update>

    <!-- 根据参数查询-->
    <select id="listByMap" resultMap="ResultMapManageBorrow" parameterType="map">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </select>

    <!-- 查询整个表 -->
    <select id="listAll" resultMap="ResultMapManageBorrow">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow
    </select>

    <!-- 查询所有实体,根据实体属性值为判断条件查询所有实体-->
    <select id="listAllByEntity" resultMap="ResultMapManageBorrow" parameterType="com.javapandeng.po.ManageBorrow">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="load" resultMap="ResultMapManageBorrow" parameterType="java.lang.Integer">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where borrowID=#{borrowID}
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="getById" resultMap="ResultMapManageBorrow" parameterType="java.lang.Integer">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where borrowID=#{borrowID}
    </select>

    <!-- 通过map查询-->
    <select id="getByMap" resultMap="ResultMapManageBorrow" parameterType="map">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </select>

    <!--通过对象查询-不分页-->
    <select id="getByEntity" resultMap="ResultMapManageBorrow" parameterType="com.javapandeng.po.ManageBorrow">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </select>

    <!-- 通过map查询分页-->
    <select id="findByMap" resultMap="ResultMapManageBorrow" parameterType="map">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </select>

    <!--通过对象查询分页-->
    <select id="findByEntity" resultMap="ResultMapManageBorrow" parameterType="com.javapandeng.po.ManageBorrow">
        select <include refid="ManageBorrow_field"/>
        from tb_borrow where 1=1
        <include refid="ManageBorrow_where"/>
    </select>

    <!-- 批量新增-->
    <select id="insertBatch" parameterType="java.util.List">
        insert into tb_borrow(
        <include refid="ManageBorrow_field"/>
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{rdID},#{bklD},#{ldContinueTimes},#{ldDateOut},#{ldDateRetPlan},#{ldDateRetAct},#{ldOverDay},#{ldOverMoney},#{lsHasReturn})
        </foreach>
    </select>



    <!-- 批量修改-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update tb_borrow
            <set>
                <if test="bkCode != null">
                    bkCode = #{bkCode},
                </if>
                <if test="bkName != null">
                    bkName = #{bkName},
                </if>
                <if test="bkAuthor != null">
                    bkAuthor = #{bkAuthor}
                </if>
                <if test="bkPress != null">
                    bkPress = #{bkPress},
                </if>
                <if test="bkDatePress != null">
                    bkDatePress = #{bkDatePress},
                </if>
                <if test="bkCatalog != null">
                    bkCatalog = #{bkCatalog}
                </if>

                <if test="bkPrice != null">
                    bkPrice = #{bkPrice},
                </if>
                <if test="bkDateInput != null">
                    bkDateInput = #{bkDateInput}
                </if>
                <if test="bkBrief != null">
                    bkBrief = #{bkBrief},
                </if>
                <if test="bkStatus != null">
                    bkStatus = #{bkStatus}
                </if>
            </set>
            where 1=1
            <if test="item.bkID != null">
                and bkID = #{item.bkID}
            </if>
        </foreach>
    </update>

    <!-- 封装纯sql语法-->
    <!-- 查询一个对象返回map-->
    <select id="getBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询一个对象返回实体类-->
    <select id="getBySqlReturnEntity" resultMap="ResultMapManageBorrow">
        ${sql}
    </select>

    <!-- 查询一个对象返回map列表-->
    <select id="listBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询列表返回实体-->
    <select id="listBySqlReturnEntity" resultMap="ResultMapManageBorrow">
        ${sql}
    </select>

    <!-- 查询分页-->
    <select id="findBySqlRerturnEntity" resultMap="ResultMapManageBorrow">
        ${sql}
    </select>

    <!-- 通过sql修改-->
    <update id="updateBysql">
        ${sql}
    </update>

    <!-- 通过sql删除-->
    <delete id="deleteBySql">
         ${sql}
    </delete>
</mapper>